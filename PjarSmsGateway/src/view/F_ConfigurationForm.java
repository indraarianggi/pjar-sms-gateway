/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.comm.CommPortIdentifier;
import java.io.IOException;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import main.SaveConfig;
import main.KeyConfiguration;

/**
 *
 * @author indraarianggi
 */
public class F_ConfigurationForm extends javax.swing.JFrame {
    
    private SaveConfig config = new SaveConfig();
    private KeyConfiguration key = new KeyConfiguration();
    
    private Boolean loginStatus;

    /**
     * Creates new form F_ConfigurationForm
     */
    public F_ConfigurationForm() {
        setResizable(false);
        initComponents();
        try {
            getAllConfig();
        } catch (IOException ex) {
            Logger.getLogger(F_ConfigurationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public F_ConfigurationForm(boolean login) {
        setResizable(false);
        initComponents();
        loginStatus = login;
        try {
            getAllConfig(login);
        } catch (IOException ex) {
            Logger.getLogger(F_ConfigurationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(!login){ // Belum login
         lblPortModem.setVisible(false);
         lblNoModem.setVisible(false);
         lblHeaderSms.setVisible(false);
         txtHeaderSms.setVisible(false);
         txtNoTelpModem.setVisible(false);
         cbPortModem.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        txtTitle = new javax.swing.JLabel();
        lblHostDatabase = new javax.swing.JLabel();
        txtHostDatabase = new javax.swing.JTextField();
        lblPortDatabase = new javax.swing.JLabel();
        txtPortDatabase = new javax.swing.JTextField();
        lblPortModem = new javax.swing.JLabel();
        txtNoTelpModem = new javax.swing.JTextField();
        lblNoModem = new javax.swing.JLabel();
        cbPortModem = new javax.swing.JComboBox<String>();
        lblHeaderSms = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHeaderSms = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONFIG");

        btnClose.setBackground(new java.awt.Color(0, 153, 102));
        btnClose.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnClose.setForeground(new java.awt.Color(0, 153, 102));
        btnClose.setText("CLOSE");
        btnClose.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnClose.setContentAreaFilled(false);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCloseMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCloseMouseReleased(evt);
            }
        });
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        txtTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        txtTitle.setForeground(new java.awt.Color(0, 153, 153));
        txtTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitle.setText("Form Title");

        lblHostDatabase.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHostDatabase.setForeground(new java.awt.Color(255, 255, 255));
        lblHostDatabase.setText("HOST Database");

        txtHostDatabase.setBackground(new java.awt.Color(0, 102, 102));
        txtHostDatabase.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtHostDatabase.setForeground(new java.awt.Color(255, 255, 255));
        txtHostDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHostDatabaseActionPerformed(evt);
            }
        });

        lblPortDatabase.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPortDatabase.setForeground(new java.awt.Color(255, 255, 255));
        lblPortDatabase.setText("PORT Database");

        txtPortDatabase.setBackground(new java.awt.Color(0, 102, 102));
        txtPortDatabase.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPortDatabase.setForeground(new java.awt.Color(255, 255, 255));

        lblPortModem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPortModem.setForeground(new java.awt.Color(255, 255, 255));
        lblPortModem.setText("PORT Modem");

        txtNoTelpModem.setBackground(new java.awt.Color(0, 102, 102));
        txtNoTelpModem.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtNoTelpModem.setForeground(new java.awt.Color(255, 255, 255));

        lblNoModem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNoModem.setForeground(new java.awt.Color(255, 255, 255));
        lblNoModem.setText("Nomor Telepon Modem");

        cbPortModem.setBackground(new java.awt.Color(0, 102, 102));
        cbPortModem.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbPortModem.setForeground(new java.awt.Color(0, 102, 102));

        lblHeaderSms.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHeaderSms.setForeground(new java.awt.Color(255, 255, 255));
        lblHeaderSms.setText("Header SMS");

        jScrollPane1.setBackground(new java.awt.Color(0, 102, 102));

        txtHeaderSms.setBackground(new java.awt.Color(0, 102, 102));
        txtHeaderSms.setColumns(20);
        txtHeaderSms.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        txtHeaderSms.setForeground(new java.awt.Color(255, 255, 255));
        txtHeaderSms.setRows(5);
        jScrollPane1.setViewportView(txtHeaderSms);

        btnSave.setBackground(new java.awt.Color(0, 153, 102));
        btnSave.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 153, 102));
        btnSave.setText("SAVE");
        btnSave.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnSave.setContentAreaFilled(false);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSaveMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSaveMouseReleased(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHostDatabase)
                                    .addComponent(lblPortDatabase)
                                    .addComponent(lblPortModem)
                                    .addComponent(lblNoModem)
                                    .addComponent(lblHeaderSms))
                                .addGap(69, 69, 69)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtPortDatabase, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHostDatabase, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNoTelpModem)
                                    .addComponent(cbPortModem, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))))))
                .addGap(0, 43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(txtTitle)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHostDatabase)
                    .addComponent(txtHostDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPortDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPortDatabase))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPortModem)
                    .addComponent(cbPortModem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoModem)
                    .addComponent(txtNoTelpModem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeaderSms)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHostDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHostDatabaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHostDatabaseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (loginStatus) {
            String host_db = txtHostDatabase.getText().trim();
            String port_db = txtPortDatabase.getText().trim();
            String port_modem = cbPortModem.getSelectedItem().toString().trim();
            String no_tlp_modem = txtNoTelpModem.getText().trim();
            String header = txtHeaderSms.getText();
            try {
                config.setConfig(host_db, port_db, port_modem, no_tlp_modem, header);
            } catch (IOException ex) {
                Logger.getLogger(F_ConfigurationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                String host_db = txtHostDatabase.getText().trim();
                String port_db = txtPortDatabase.getText().trim();
                String port_modem = config.getConfig().get(key.port_modem);
                String no_tlp_modem = config.getConfig().get(key.no_tlp_modem);
                String header = config.getConfig().get(key.header);
            
                config.setConfig(host_db, port_db, port_modem, no_tlp_modem, header);
            } catch (IOException ex) {
                Logger.getLogger(F_ConfigurationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMousePressed
        // TODO add your handling code here:
        btnClose.setBackground(new java.awt.Color(0, 51, 102));
    }//GEN-LAST:event_btnCloseMousePressed

    private void btnSaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMousePressed
        // TODO add your handling code here:
        btnSave.setBackground(new java.awt.Color(0, 51, 102));
    }//GEN-LAST:event_btnSaveMousePressed

    private void btnCloseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseReleased
        // TODO add your handling code here:
        btnClose.setBackground(new java.awt.Color(0, 102, 102));
    }//GEN-LAST:event_btnCloseMouseReleased

    private void btnSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseReleased
        // TODO add your handling code here:
        btnSave.setBackground(new java.awt.Color(0, 102, 102));
    }//GEN-LAST:event_btnSaveMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_ConfigurationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_ConfigurationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_ConfigurationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_ConfigurationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_ConfigurationForm().setVisible(true);
            }
        });
    }
    
    private void getAllConfig(boolean login) throws IOException{
        txtHostDatabase.setText(config.getConfig().get(key.host_database));
        txtPortDatabase.setText(config.getConfig().get(key.port_database));
        if(login){
            txtNoTelpModem.setText(config.getConfig().get(key.no_tlp_modem));

            Enumeration ports = CommPortIdentifier.getPortIdentifiers();

            while(ports.hasMoreElements())
            {
                CommPortIdentifier cpi = (CommPortIdentifier)ports.nextElement();
                if(cpi.getPortType() == CommPortIdentifier.PORT_SERIAL){
                    cbPortModem.addItem(cpi.getName());
                    //System.out.println(cpi.getName());   
                }
            }
            cbPortModem.setSelectedItem(config.getConfig().get(key.port_modem));
            txtHeaderSms.setText(config.getConfig().get(key.header));
        }
    }
    
    private void getAllConfig() throws IOException{
        txtHostDatabase.setText(config.getConfig().get(key.host_database));
        txtPortDatabase.setText(config.getConfig().get(key.port_database));
        txtNoTelpModem.setText(config.getConfig().get(key.no_tlp_modem));
        
        Enumeration ports = CommPortIdentifier.getPortIdentifiers();
        
        while(ports.hasMoreElements())
        {
            CommPortIdentifier cpi = (CommPortIdentifier)ports.nextElement();
            if(cpi.getPortType() == CommPortIdentifier.PORT_SERIAL){
                cbPortModem.addItem(cpi.getName());
                //System.out.println(cpi.getName());   
            }
        }
        cbPortModem.setSelectedItem(config.getConfig().get(key.port_modem));
        txtHeaderSms.setText(config.getConfig().get(key.header));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbPortModem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeaderSms;
    private javax.swing.JLabel lblHostDatabase;
    private javax.swing.JLabel lblNoModem;
    private javax.swing.JLabel lblPortDatabase;
    private javax.swing.JLabel lblPortModem;
    private javax.swing.JTextArea txtHeaderSms;
    private javax.swing.JTextField txtHostDatabase;
    private javax.swing.JTextField txtNoTelpModem;
    private javax.swing.JTextField txtPortDatabase;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
